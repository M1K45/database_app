// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using database_app;

#nullable disable

namespace database_app.Migrations
{
    [DbContext(typeof(WeatherDBContext))]
    partial class WeatherDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("database_app.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Weathername")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Weathername");

                    b.ToTable("Description");
                });

            modelBuilder.Entity("database_app.Temperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("temperature")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Temperature");
                });

            modelBuilder.Entity("database_app.Weather", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("mainId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("timezone")
                        .HasColumnType("INTEGER");

                    b.HasKey("name");

                    b.HasIndex("mainId");

                    b.ToTable("weathers");
                });

            modelBuilder.Entity("database_app.Description", b =>
                {
                    b.HasOne("database_app.Weather", null)
                        .WithMany("weather")
                        .HasForeignKey("Weathername");
                });

            modelBuilder.Entity("database_app.Weather", b =>
                {
                    b.HasOne("database_app.Temperature", "main")
                        .WithMany()
                        .HasForeignKey("mainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("main");
                });

            modelBuilder.Entity("database_app.Weather", b =>
                {
                    b.Navigation("weather");
                });
#pragma warning restore 612, 618
        }
    }
}
